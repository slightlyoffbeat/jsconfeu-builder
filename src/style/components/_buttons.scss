// ----------------------------------------------------------------------------
// Buttons
// ----------------------------------------------------------------------------
/**
This is a system for easiliy creating buttons, and spinning up new button
styles.
This uses a mixin that can be found at /util/mixins/_buttons.scss
*/

// Base button styles
// ------------------
button,
.button {
  color: $blue;
  display: inline-block;
  font-weight: bold;
  font-size: 16px;
  border-radius: 30px;
  line-height: inherit;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  padding: spacing(1) spacing(5);
  border: 3px solid $white;
  background: $white;
  transition: all $base-time $base-ease;
  text-decoration: none;
  &:active,
  &:hover,
  &:focus {
    background: darken($white, 5%);
    color: $black;
    text-decoration: none;
    outline: 0;
    background-image: none;
  }

  &:focus {
    box-shadow: 0 0 4px 2px $white;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.65;
    box-shadow: none;
  }

  &.button--dark {
    background-color: $black;
    border-color: $black;
    color: $white;
  }

  &.button--outline {
    background-color: transparent;
    color: $white;

    &:hover {
      background-color: $white;
      color: $black;
    }
  }

  &.button--outline.button--dark {
    color: $black;
  }
}

// Variables
// ---------
$_button-primary-color: $white;
$_button-primary-color-hover: $white;
$_button-primary-bg: $primary;
$_button-primary-bg-hover: darken($primary, 10%);
$_button-primary-border: $primary;
$_button-primary-border-hover: darken($primary, 10%);
$_button-secondary-color: $white;
$_button-secondary-color-hover: $white;
$_button-secondary-bg: #1a1a1a;
$_button-secondary-bg-hover: lighten(#1a1a1a, 10%);

/**
Main Buttons
Copied from buttons mixin. You can create a new button like so:
.button--modifier {
  @include button-variant($color, color-hover, background, $background-hover, $border, $border-hover)
}
Note that $background-hover, $border, & $border-hover are optional
Takes a few variables and creates a new button style
@param {color}: color of button text
@param {color-hover} color of button text on hover
@param {background}: color of button background
@param {background-hover} color of button on hover
@param {border} color of button border (defaults to background color)
@param {border-hover} color of border on hover (defaults to hover bg color)
*/

// Button Variations
// ------------------
.button--primary {
  @include button-variant(
    $_button-primary-color,
    $_button-primary-color-hover,
    $_button-primary-bg,
    $_button-primary-bg-hover,
    $_button-primary-border,
    $_button-primary-border-hover
  );
}

.button--secondary {
  @include button-variant(
    $_button-secondary-color,
    $_button-secondary-color-hover,
    $_button-secondary-bg,
    $_button-secondary-bg-hover
  );
}

/**
Outline Buttons
Takes a few variables and creates a new button style
Copied from buttons mixin. You can create a new button like so:
.button-outline--modifier {
  @include($color, $border, $background-hover, $color-hover, $border-hover)
}
only first param is required
@param {color}: color of button text
@param {border} color of button outline/border (default: $color)
@param {background-hover}: color of background on hover (default: $color)
@param {color-hover} color of text on hover (default: $white)
@param {border-hover} color of border on hover (default: $background-hover)
*/

// Outline Button Variations
// ----------------------
.button-outline--primary {
  @include button-outline-variant($_button-primary-bg);
}

.button-outline--secondary {
  @include button-outline-variant($_button-secondary-bg);
}

// Button Sizes
// ------------
.button--large {
  @include typesize(1);
  padding: 0.75rem 1.25rem;
}

.button--small {
  @include typesize(-1);
  padding: 0.25rem 0.75rem;
}

// Block button
// ------------
.button--block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.button--block + .button--block {
  margin-top: spacing(1);
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.button--block {
    width: 100%;
  }
}
